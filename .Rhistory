print(os.getcwd())
reticulate::repl_python()
import numpy as np
reticulate::repl_python()
import numpy as np
reticulate::repl_python()
import numpy as np
reticulate::repl_python()
import numpy as np
import matplotlib.pyplotot as plt
quit
!pip install matplotlib
reticulate::repl_python()
```{python}
!pip install matplotlib
import matplotlib.pyplotot as plt
import matplotlib.pyplot as plt
a = np.arange(-1,1,0.01)
b = a**2
plt.plot(a,b)
quit
data_2022 <- read.csv("https://raw.githubusercontent.com/Sungileo/trainsets/main/OBS_ASOS_DD_20230322080932.csv", fileEncoding = "euc-kr")
data_2022 %>% dim()
data_2022 %>% head()
data_2022 %>% sapply(class)
library(ggplot2)
library(dplyr)
data_2022 %>% dim()
data_2022 %>% head()
data_2022 %>% sapply(class)
data_2022$일시 <-data_2022$일시 %>% as.Date("%Y-%m-%d")
data_2022 %>% sapply(class)
data_2022 %>% summary()
date_22s <- "2022-01-01" %>% as.Date("%Y-%m-%d")  #Y는 대문자
date_22e <- "2023-01-01" %>% as.Date("%Y-%m-%d")
break_date_22 <- seq.Date(date_22s, date_22e, by = "3 month")
#data_2021 %>% names()
ggplot(data_2022,aes(x = 일시,y = 평균기온..C., color = 지점명))+
geom_line(linewidth = 1) +
scale_x_date(name ="월",
breaks = break_date_22,
labels = c("1월","4월","7월","10월","1월")) +
scale_y_continuous(name = "평균기온")+
theme_light()
mean_temps <- temps_long %>%
group_by(location,month) %>%
summarize(mean = mean(temperature)) %>%
ungroup() %>%
mutate(month = factor(month %>% paste(),
levels = 1:12 %>% paste()))
ggplot(mean_temps,aes(x = month, y = location, fill = mean))+
geom_tile(width = .95,height = 0.95)+
scale_fill_viridis_c(option = "B",begin = 0.15, end = 0.98,
name = "temperature")+
coord_fixed(expand = FALSE)+
ylab(NULL)
mean_temps <- temps_long %>%
group_by(location,month) %>%
summarize(mean = mean(temperature)) %>%
ungroup() %>%
mutate(month = factor(month %>% paste(),
levels = 1:12 %>% paste()))
mean_temps <- temps_long %>%
group_by(location,month) %>%
summarize(mean = mean(temperature), .groups = "ungrouped") %>%
mutate(month = factor(month %>% paste(),
levels = 1:12 %>% paste()))
View(temps_long)
rm(list = ls)
rm(list = "ls")
remove(list = ls)
rm(list = ls)
rm(list = ls())
library(ggplot2)
library(dplyr)
data_raw <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2/mpg.csv")
data_raw %>% dim()
data_raw %>% head()
data_raw %>% summary()
data_use <- data_raw %>% select(-1)
data_use %>% head()
data_use <- data_raw %>% select(-1)
data_use %>% head()
data_use <- data_raw %>% select(-1)
data_use %>% head()
data_use <- data_raw %>% select(-1)
data_use %>% head()
ggplot(data_use, aes(x=displ, y=hwy)) + geom_point()
ggplot(data_use, aes(x=displ, y=hwy)) + geom_smooth()
#| warning: false
#| message: false
rm(list = ls())
library(ggplot2)
library(dplyr)
data_raw <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2/mpg.csv")
data_raw %>% dim()
data_raw %>% head()
data_raw %>% summary()
data_use <- data_raw %>% select(-1)
data_use %>% head()
ggplot(data_use, aes(x=displ, y=hwy)) + geom_point()
ggplot(data_use, aes(x=displ, y=hwy)) + geom_smooth()
data_file <- read.csv("ncdc_normals.csv")
reticulate::repl_python()
import seaborn as sns
quit
```{r}
reticulate::repl_python()
!pip install tensorflow
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
reticulate::repl_python()
import pandas as pd
pd.__version_
pd.__version__
```{python}
s2 = pd.Series([68, 83, 112, 68], index=["alice", "bob", "charles", "darwin"])
s2
s2['bob']
%matplotlib inline
reticulate::repl_python()
%matplotlib inline%
reticulate::repl_python()
import matplotlib.pyplot as plt
temperatures = [4.4,5.1,6.1,6.2,6.1,6.1,5.7,5.2,4.7,4.1,3.9,3.5]
s7 = pd.Series(temperatures, name="Temperature")
s7.plot()
plt.show()
reticulate::repl_python()
from apyori import apriori
from apyori import apriori
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import networkx as nx
import networkx as nx
quit
version
data_file <- read.csv("ncdc_normals.csv")
data_file$date <- data_file$date %>% as.Date("%Y-%m-%d")
library(dplyr)
data_file$date <- data_file$date %>% as.Date("%Y-%m-%d")
View(data_file)
houston <- data.frame(station_id = c("USW00012918"), location = c("Houston"))
houston_temps <- data_file %>% inner_join(houston,by="station_id")
houston_temps %>% head()
View(houston_temps)
date_s <- "0000-01-01" %>% as.Date("%Y-%m-%d")  #Y는 대문자
date_e <- "0001-01-01" %>% as.Date("%Y-%m-%d")
break_date <- seq.Date(date_s, date_e, by = "3 month")
ggplot(houston_temps, aes(x=date, y=temperature, color=location))+
geom_line()+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()
library(ggplot2)
ggplot(houston_temps, aes(x=date, y=temperature, color=location))+
geom_line()+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()
ggplot(houston_temps, aes(x=date, y=temperature))+
geom_line()+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()
ggplot(houston_temps, aes(x=date, y=temperature,colors("blue")))+
geom_line()+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()
ggplot(houston_temps, aes(x=date, y=temperature,color = location))+
geom_line()+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()
ggplot(houston_temps, aes(x=date, y=temperature,color = location,colors("blue")))+
geom_line()+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()
ggplot(houston_temps, aes(x=date, y=temperature,color = location))+
geom_line()+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()+
ylab("Temperature(F)")
ggplot(houston_temps, aes(x=date, y=temperature,color = location))+
geom_line()+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()+
ylab("Temperature(℉)")
ggplot(houston_temps, aes(x=date, y=temperature,color = location))+
geom_line(size = 5)+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()+
ylab("Temperature(℉)")
ggplot(houston_temps, aes(x=date, y=temperature,color = location))+
geom_line(size = 2)+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()+
ylab("Temperature(℉)")
ggplot(houston_temps, aes(x=date, y=temperature,color = location))+
geom_line(size = 1)+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()+
ylab("Temperature(℉)")
ggplot(houston_temps, aes(x=date, y=temperature,color = location))+
geom_line(linewidth = 1)+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()+
ylab("Temperature(℉)")
ggplot(houston_temps, aes(x=date, y=temperature,color = location))+
geom_line(size = 1)+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()+
ylab("Temperature(℉)")
library(cowplot)
install.packages("cowplot")
install.packages("cowplot")
library(cowplot)
library(cowplot)
houston_plot <- ggplot(houston_temps, aes(x=date, y=temperature,color = location))+
geom_line(size = 1)+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()+
ylab("Temperature(℉)")
plot_ab <- plot_grid(houston_plot,houston_plot,
nrow = 1,
rel_widths = c(1,2),
labels = c("a","b"))
plot_ab
plot_ab
plot_abc <- plot_grid(plot_ab, houston_plot,
ncol = 1,
rel_heights = c(1.5,2),
labels = c("","c"))
plot_abc
ggplot(houston_temps, aes(x=date, y=temperature,color = location))+
geom_line(size = 1)+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()+
ylab("Temperature(℉)")
ggplot(houston_temps, aes(x=date, y=temperature,color = location))+
geom_line(size = 1,color = "blue")+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()+
ylab("Temperature(℉)")
ggplot(houston_temps, aes(x=date, y=temperature,color = location))+
geom_line(size = 1,color = "royalblue")+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()+
ylab("Temperature(℉)")
houston_plot <- ggplot(houston_temps, aes(x=date, y=temperature,color = location))+
geom_line(size = 1,color = "royalblue")+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()+
ylab("Temperature(℉)")
plot_ab <- plot_grid(houston_plot,houston_plot,
nrow = 1,
rel_widths = c(1,2),
labels = c("a","b"))
plot_abc <- plot_grid(plot_ab, houston_plot,
ncol = 1,
rel_heights = c(1.5,2),
labels = c("","c"))
plot_abc
data_file$station_id %>% unique() %>% length()
data_file$station_id %>% nunique()
data_file$station_id %>% unique() %>% length()
ggplot(temps_long, aes(x=date,y=temperature,color=location))+geom_line()
temps_long <- data_file %>% inner_join(station_loc,by="station_id")
temps_long %>% head()
station_loc <- data.frame(station_id = c("USW00014819","USC00042319","USW00093107","USW00012918"),
location = c("Chicago","Death valley","San diego","Houston"))
temps_long <- data_file %>% inner_join(station_loc,by="station_id")
temps_long %>% head()
ggplot(temps_long, aes(x=date,y=temperature,color=location))+geom_line()
data_2022 <- read.csv("https://raw.githubusercontent.com/Sungileo/trainsets/main/OBS_ASOS_DD_20230322080932.csv", fileEncoding = "euc-kr")
data_2022 %>% dim()
data_2022 %>% head()
data_2022 %>% sapply(class)
data_2022$일시 <-data_2022$일시 %>% as.Date("%Y-%m-%d")
data_2022 %>% sapply(class)
data_2022 %>% summary()
date_22s <- "2022-01-01" %>% as.Date("%Y-%m-%d")  #Y는 대문자
date_22e <- "2023-01-01" %>% as.Date("%Y-%m-%d")
break_date_22 <- seq.Date(date_22s, date_22e, by = "3 month")
#data_2021 %>% names()
ggplot(data_2022,aes(x = 일시,y = 평균기온..C., color = 지점명))+
geom_line(linewidth = 1) +
scale_x_date(name ="월",
breaks = break_date_22,
labels = c("1월","4월","7월","10월","1월")) +
scale_y_continuous(name = "평균기온")+
theme_light()
mean_temps <- temps_long %>%
group_by(location,month) %>%
summarize(mean = mean(temperature)) %>%
ungroup() %>%
mutate(month = factor(month %>% paste(),
levels = 1:12 %>% paste()))
mean_temps <- temps_long %>%
group_by(location, month) %>%
summarize(mean = mean(temperature)) %>%
ungroup(.)
View(temps_long)
mean_temps <- temps_long %>%
group_by(location,month) %>%
summarize(mean = mean(temperature))
mean_temps <- temps_long %>%
group_by(location,month) %>%
summarize(mean = mean(temperature))
mean_temps <- temps_long %>%
group_by(month,location) %>%
summarize(mean = mean(temperature))
mean_temps <- temps_long %>%
group_by(month,location) %>%
summarise(mean = mean(temperature)) %>%
ungroup() %>%
mutate(month = factor(month %>% paste(),
levels = 1:12 %>% paste()))
View(mean_temps)
mean_temps <- temps_long %>%
group_by(month,location) %>%
summarise(mean = mean(temperature)) %>%
ungroup() %>%
mutate(month = factor(month %>% paste(),
levels = 1:12 %>% paste()))
ggplot(mean_temps,aes(x = month, y = location, fill = mean))+
geom_tile(width = .95,height = 0.95)+
scale_fill_viridis_c(option = "B",begin = 0.15, end = 0.98,
name = "temperature")+
coord_fixed(expand = FALSE)+
ylab(NULL)
hs_sd <- data.frame(station_id = c("USW00012918","USW00093107"), location = c("Houston","San diego"))
hs_sd_temps <- data_file %>% inner_join(hs_sd,by="station_id")
hs_sd_temps %>% head()
hs_sd_temps
hs_sd_temps %>% group_by(location) %>% summarise(temps = temperature)
gggg <- hs_sd_temps %>% group_by(location) %>% summarise(temps = temperature)
View(gggg)
ggplot(hs_sd_temps, aes(x=date, y=temperature,color = location))+
geom_line(size = 1,color = "royalblue")+
scale_x_date(name="month",
breaks = break_date,
labels = c("jan", "apr", "jul", "oct", "jan"))+
theme_light()+
ylab("Temperature(℉)")
hs_sd_temps %>% filter(location ="Houston")
hs_sd_temps %>% filter(location =="Houston")
hs <- hs_sd_temps %>% filter(location =="Houston")
sd <- hs_sd_temps %>% filter(location =="San diego")
ssss <- cbind(hs,sd)
ssss
texas_cnt <- read.csv("https://raw.githubusercontent.com/christianmendoza/texas-counties/main/data/texas-counties.csv")
texas_cnt
View(texas_cnt)
ggplot(texas_cnt,aes(x=county,y=population))+
geom_hline(yintercept = 0,linetype = 2, color = "grey40")+
geom_point(size = 1,color = "loyalblue")+
geom_text_repel(aes(label = label),
min.segment.length = 0,
max.overlaps = 100)+
theme_light()+
theme(panel.border = element_blank())
ggplot(texas_cnt,aes(x=county,y=population))+
geom_hline(yintercept = 0,linetype = 2, color = "grey40")+
geom_point(size = 1,color = "loyalblue")+
geom_text(aes(label = label),
min.segment.length = 0,
max.overlaps = 100)+
theme_light()+
theme(panel.border = element_blank())
ggplot(texas_cnt,aes(x=county,y=population))+
geom_hline(yintercept = 0,linetype = 2, color = "grey40")+
geom_point(size = 1,color = "loyalblue")+
theme_light()+
theme(panel.border = element_blank())
ggplot(texas_cnt,aes(x=county,y=population))+
geom_hline(yintercept = 0,linetype = 2, color = "grey40")+
geom_point(size = 1, color = "royalblue")+
theme_light()+
theme(panel.border = element_blank())
View(texas_cnt)
tx_counties <- select(county,population) %>%
mutate(county = gsub("county","",name),
popratio = population/median(population)) %>%
arrange(desc(popratio)) %>%
mutate(index = 1:n(),
label = ifelse(index<=3|index>n()-3|runif(n())<.04,county,""))
View(texas_cnt)
tx_counties <- texas_cnt %>%
select(county,population) %>%
mutate(county = gsub("county","",name),
popratio = population/median(population)) %>%
arrange(desc(popratio)) %>%
mutate(index = 1:n(),
label = ifelse(index<=3|index>n()-3|runif(n())<.04,county,""))
tx_counties <- texas_cnt %>%
select(county,population) %>%
mutate(county = gsub("county","",county),
popratio = population/median(population)) %>%
arrange(desc(popratio)) %>%
mutate(index = 1:n(),
label = ifelse(index<=3|index>n()-3|runif(n())<.04,county,""))
tx_counties
View(tx_counties)
ggplot(tx_counties,aes(x=county,y=popratio))+
geom_hline(yintercept = 0,linetype = 2, color = "grey40")+
geom_point(size = 1, color = "royalblue")+
theme_light()+
theme(panel.border = element_blank())
ggplot(tx_counties,aes(x=index,y=popratio))+
geom_hline(yintercept = 0,linetype = 2, color = "grey40")+
geom_point(size = 1, color = "royalblue")+
theme_light()+
theme(panel.border = element_blank())
ggplot(tx_counties,aes(x=index,y=popratio))+
geom_hline(yintercept = 0,linetype = 2, color = "grey40")+
geom_point(size = 1, color = "royalblue")+
geom_text_repel(aes(label = label),
min.segment.length = 0,
max.overlaps = 100)+
theme_light()+
theme(panel.border = element_blank())
ggplot(tx_counties,aes(x=index,y=popratio))+
geom_hline(yintercept = 0,linetype = 2, color = "grey40")+
geom_point(size = 1, color = "royalblue")+
geom_text_(aes(label = label),
min.segment.length = 0,
max.overlaps = 100)+
theme_light()+
theme(panel.border = element_blank())
ggplot(tx_counties,aes(x=index,y=popratio))+
geom_hline(yintercept = 0,linetype = 2, color = "grey40")+
geom_point(size = 1, color = "royalblue")+
geom_text(aes(label = label),
min.segment.length = 0,
max.overlaps = 100)+
theme_light()+
theme(panel.border = element_blank())
install.packages("ggrepel")
library(ggrepel)
ggplot(tx_counties,aes(x=index,y=popratio))+
geom_hline(yintercept = 0,linetype = 2, color = "grey40")+
geom_point(size = 1, color = "royalblue")+
geom_text_repel(aes(label = label),
min.segment.length = 0,
max.overlaps = 100)+
theme_light()+
theme(panel.border = element_blank())
ggplot(tx_counties,aes(x=index,y=popratio))+
geom_hline(yintercept = 0,linetype = 2, color = "grey40")+
geom_point(size = 1, color = "royalblue")+
geom_text_repel(aes(label = label),
min.segment.length = 0,
max.overlaps = 100)+
theme_light()+
theme(panel.border = element_blank())
ggplot(tx_counties,aes(x=index,y=popratio))+
geom_point(size = 1, color = "royalblue")+
geom_text_repel(aes(label = label),
min.segment.length = 0,
max.overlaps = 100)+
theme_light()+
theme(panel.border = element_blank())
label_log10 <- sapply(-2:2,function(i) as.expression(bquote(10^ .(i))))
label_log10 <- sapply(-2:2,function(i) as.expression(bquote(10^ .(i))))
ggplot(tx_counties,aes(x=index,y=popratio))+
geom_point(size = 1, color = "royalblue")+
geom_text_repel(aes(label = label),
min.segment.length = 0,
max.overlaps = 100)+
scale_y_log10(name = "popnum / med",
breaks = 10^(-2:2),
labels = label_log10)+
theme_light()+
theme(panel.border = element_blank())
install.packages('plyr', repos = "http://cran.us.r-project.org")
theme(panel.border = element_blank())
