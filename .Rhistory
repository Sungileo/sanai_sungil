st_crs(data_nm_sf) <- 4737
cheonan <- cheonan %>%
filter(EMD_NM!="광덕면")
gn <- ggplot()+
geom_sf(data = cheonan,color = "black")+
geom_sf(data = data_nm_sf,aes(fill = 정보))+
theme_minimal()+
theme(legend.position = "none")
gn %>% ggplotly()
#|warning: False
library(sf)
library(raster)
library(spData)
library(spDataLarge)
vignette(package = "sf")
world %>% head()
names(world)
plot(world)
library(sp)
world_sp = as(world, Class = "Spatial")
world_sf = st_as_sf(world_sp)
plot(world["continent"])
world_asia = world[world$continent == "Asia", ]
asia = st_union(world_asia)
plot(world["pop"], reset = FALSE)
plot(asia, add = TRUE, col = "red")
plot(world["continent"], reset = FALSE)
cex = sqrt(world$pop) / 10000
world_cents = st_centroid(world, of_largest = TRUE)
plot(st_geometry(world_cents), add = TRUE, cex = cex)
india = world[world$name_long == "India", ]
plot(st_geometry(india), expandBB = c(0.1, 0.1, 0.1, 0.1), col = "gray", lwd = 3)
plot(world_asia[0], add = TRUE)
st_point(c(5, 2, 3, 1)) %>% plot()
multipoint_matrix = rbind(c(5, 2), c(1, 3), c(3, 4), c(3, 2))
st_multipoint(multipoint_matrix) %>% plot()
linestring_matrix = rbind(c(1, 5), c(4, 4), c(4, 1), c(2, 2), c(3, 2))
st_linestring(linestring_matrix) %>% plot()
polygon_list = list(rbind(c(1, 5), c(2, 2), c(4, 1), c(4, 4), c(1, 5)))
st_polygon(polygon_list) %>% plot()
polygon_border = rbind(c(1, 5), c(2, 2), c(4, 1), c(4, 4), c(1, 5))
polygon_hole = rbind(c(2, 4), c(3, 4), c(3, 3), c(2, 3), c(2, 4))
polygon_with_hole_list = list(polygon_border, polygon_hole)
st_polygon(polygon_with_hole_list) %>% plot()
multilinestring_list = list(rbind(c(1, 5), c(4, 4), c(4, 1), c(2, 2), c(3, 2)),
rbind(c(1, 2), c(2, 4)))
st_multilinestring((multilinestring_list)) %>% plot()
multipolygon_list = list(list(rbind(c(1, 5), c(2, 2), c(4, 1), c(4, 4), c(1, 5))),
list(rbind(c(0, 2), c(1, 2), c(1, 3), c(0, 3), c(0, 2))))
st_multipolygon(multipolygon_list) %>% plot()
gemetrycollection_list = list(st_multipoint(multipoint_matrix),
st_linestring(linestring_matrix))
st_geometrycollection(gemetrycollection_list) %>% plot()
point1 = st_point(c(5, 2))
point2 = st_point(c(1, 3))
points_sfc = st_sfc(point1, point2)
points_sfc %>% plot()
polygon_list1 = list(rbind(c(1, 5), c(2, 2), c(4, 1), c(4, 4), c(1, 5)))
polygon1 = st_polygon(polygon_list1)
polygon_list2 = list(rbind(c(0, 2), c(1, 2), c(1, 3), c(0, 3), c(0, 2)))
polygon2 = st_polygon(polygon_list2)
polygon_sfc = st_sfc(polygon1, polygon2)
polygon_sfc %>% plot()
multilinestring_list1 = list(rbind(c(1, 5), c(4, 4), c(4, 1), c(2, 2), c(3, 2)),
rbind(c(1, 2), c(2, 4)))
multilinestring1 = st_multilinestring((multilinestring_list1))
multilinestring_list2 = list(rbind(c(2, 9), c(7, 9), c(5, 6), c(4, 7), c(2, 7)),
rbind(c(1, 7), c(3, 8)))
multilinestring2 = st_multilinestring((multilinestring_list2))
multilinestring_sfc = st_sfc(multilinestring1, multilinestring2)
multilinestring_sfc %>% plot()
point_multilinestring_sfc = st_sfc(point1, multilinestring1)
point_multilinestring_sfc %>% plot()
st_crs(points_sfc)
points_sfc_wgs = st_sfc(point1, point2, crs = 4326)
st_crs(points_sfc_wgs)
lnd_point = st_point(c(0.1, 51.5))                 # sfg object
lnd_geom = st_sfc(lnd_point, crs = 4326)           # sfc object
lnd_attrib = data.frame(                           # data.frame object
name = "London",
temperature = 25,
date = as.Date("2017-06-21")
)
lnd_sf = st_sf(lnd_attrib, geometry = lnd_geom)    # sf object
lnd_sf
#install.packages("rgdal")
library(rgdal)
raster_filepath = system.file("raster/srtm.tif", package = "spDataLarge")
new_raster = raster(raster_filepath)
new_raster
plot(new_raster)
my_raster = raster(nrows = 8, ncols = 8, res = 0.5,
xmn = -2.0, xmx = 2.0, ymn = -2.0, ymx = 2.0, vals = 1:64)
nlayers(my_raster)
## plotting
plot(my_raster)
multi_raster_file = system.file("raster/landsat.tif", package = "spDataLarge")
r_brick = brick(multi_raster_file)
nlayers(r_brick)
plot(r_brick)
raster_on_disk = raster(r_brick, layer = 1)
raster_in_memory = raster(xmn = 301905, xmx = 335745,
ymn = 4111245, ymx = 4154085,
res = 30)
values(raster_in_memory) = sample(seq_len(ncell(raster_in_memory)))
crs(raster_in_memory) = crs(raster_on_disk) #같은 좌표 입력
r_stack = stack(raster_in_memory, raster_on_disk)
r_stack
plot(r_stack)
vector_filepath = system.file("vector/zion.gpkg", package = "spDataLarge")
new_vector = st_read(vector_filepath)
## st_read() : read vector dataset in R sf package
st_crs(new_vector)
raster_filepath = system.file("raster/srtm.tif", package = "spDataLarge")
new_raster = raster(raster_filepath)
projection(new_raster)
new_raster3  <-  new_raster
projection(new_raster3) <-  "+proj=utm +zone=12 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0
+units=m +no_defs"
names(world)
luxembourg = world[world$name_long == "Luxembourg", ]
south_korea = world[world$name_long == "Republic of Korea", ]
st_area(luxembourg)
st_area(south_korea)
library(tidyr)
library(dplyr)
dim(world)
world_df = st_drop_geometry(world)
class(world_df)
dim(world_df)
world %>%
filter(continent == "Asia") %>%
select(name_long) %>%
plot()
plot(st_geometry(cycle_hire), col = "blue")
plot(st_geometry(cycle_hire_osm), add = TRUE, pch = 3, col = "red")
any(st_touches(cycle_hire, cycle_hire_osm, sparse = FALSE)) #OSM : OpenStreetMap
plot(st_geometry(cycle_hire), col = "blue")
plot(st_geometry(cycle_hire_osm), add = TRUE, pch = 3, col = "red")
any(st_touches(cycle_hire, cycle_hire_osm, sparse = FALSE))
any(st_touches(cycle_hire, cycle_hire_osm, sparse = FALSE))
library(tmap)
library(mapview)
tmap_mode("view")
tm_basemap("Stamen.Terrain") +
tm_shape(cycle_hire) +
tm_symbols(col = "red", shape = 16, size = 0.5, alpha = .5) +
tm_shape(cycle_hire_osm) +
tm_symbols(col = "blue", shape = 16, size = 0.5, alpha = .5) +
tm_tiles("Stamen.TonerLabels")
tmap_mode("plot")
cycle_hire %>% View()
cycle_hire_osm %>% View()
tm_basemap("Stamen.Terrain") +
tm_shape(cycle_hire) +
tm_symbols(col = "red", shape = 16, size = 0.5, alpha = .5) +
tm_shape(cycle_hire_osm) +
tm_symbols(col = "blue", shape = 16, size = 0.5, alpha = .5) +
tm_tiles("Stamen.TonerLabels")
tm_basemap("Stamen.Terrain") +
tm_shape(cycle_hire) +
tm_symbols(col = "red", shape = 16, size = 0.5, alpha = .5) +
tm_shape(cycle_hire_osm) +
tm_symbols(col = "blue", shape = 16, size = 0.5, alpha = .5) +
tm_tiles("Stamen.TonerLabels")
tmap_mode("plot")
```
tmap_mode("plot")
tm_basemap("Stamen.Terrain") +
tm_shape(cycle_hire) +
tm_symbols(col = "red", shape = 16, size = 0.5, alpha = .5) +
tm_shape(cycle_hire_osm) +
tm_symbols(col = "blue", shape = 16, size = 0.5, alpha = .5) +
tm_tiles("Stamen.TonerLabels")
tmap_mode("view")
tm_basemap("Stamen.Terrain") +
tm_shape(cycle_hire) +
tm_symbols(col = "red", shape = 16, size = 0.5, alpha = .5) +
tm_shape(cycle_hire_osm) +
tm_symbols(col = "blue", shape = 16, size = 0.5, alpha = .5) +
tm_tiles("Stamen.TonerLabels")
tmap_mode("plot")
cycle_hire_P <-  st_transform(cycle_hire, 27700)
cycle_hire_osm_P <-  st_transform(cycle_hire_osm, 27700)
sel <-  st_is_within_distance(cycle_hire_P, cycle_hire_osm_P, dist = 20)
View(sel)
summary(lengths(sel) > 0)
sum(lengths(sel) > 0)
mean(lengths(sel) > 0)
cycle_hire %>% st_crs
cycle_hire %>% st_crs()
cycle_hire_P <-  st_transform(cycle_hire, 27700)
cycle_hire_P %>% st_crs()
cycle_hire_P <-  st_transform(cycle_hire, 27700)
cycle_hire_osm_P <-  st_transform(cycle_hire_osm, 27700)
sel <-  st_is_within_distance(cycle_hire_P, cycle_hire_osm_P, dist = 20)
summary(lengths(sel) > 0)
sum(lengths(sel) > 0)
mean(lengths(sel) > 0)
z = st_join(cycle_hire_P, cycle_hire_osm_P,
join = st_is_within_distance, dist = 20)
nrow(cycle_hire)
nrow(z)
nrow(cycle_hire)
nrow(z)
z = st_join(cycle_hire_P, cycle_hire_osm_P,
join = st_is_within_distance, dist = 20)
nrow(cycle_hire)
nrow(z)
View(z)
View(z)
z = st_join(cycle_hire_P, cycle_hire_osm_P,
join = st_is_within_distance, dist = 20)
nrow(cycle_hire)
nrow(z)
z = z %>%
group_by(id) %>%
summarize(capacity = mean(capacity))
nrow(z) == nrow(cycle_hire)
plot(cycle_hire_osm["capacity"])
plot(z["capacity"])
View(z)
z = st_join(cycle_hire_P, cycle_hire_osm_P,
join = st_is_within_distance, dist = 20)
nrow(cycle_hire)
nrow(z)
View(z)
nrow(z)
z = st_join(cycle_hire_P, cycle_hire_osm_P,
join = st_is_within_distance, dist = 20)
nrow(cycle_hire)
nrow(z)
z = z %>%
group_by(id) %>%
summarize(capacity = mean(capacity))
nrow(z)
plot(cycle_hire_osm["capacity"])
plot(z["capacity"])
z = st_join(cycle_hire_P, cycle_hire_osm_P,
join = st_is_within_distance, dist = 40)
nrow(cycle_hire)
nrow(z)
z = z %>%
group_by(id) %>%
summarize(capacity = mean(capacity))
nrow(z)
plot(cycle_hire_osm["capacity"])
plot(z["capacity"])
z = st_join(cycle_hire_P, cycle_hire_osm_P,
join = st_is_within_distance, dist = 20)
nrow(cycle_hire)
nrow(z)
z = z %>%
group_by(id) %>%
summarize(capacity = mean(capacity))
nrow(z)
plot(cycle_hire_osm["capacity"])
plot(z["capacity"])
rm(list = ls())
library(sf)
library(tidyverse)
library(rgdal)
library(plotly)
library(ggtext)
# Chunk 1
#| warning: false
#| message: false
# Chunk 2
rm(list = ls())
library(sf)
library(tidyverse)
library(rgdal)
library(plotly)
library(ggtext)
# Chunk 3
data_sp <- readOGR("C:/trainsets_2/LSMD_ADM_SECT_UMD_충남/LSMD_ADM_SECT_UMD_44.shp",encoding = "euc-kr")
data_sf = st_as_sf(data_sp)
data_sf %>% head()
# Chunk 4
data_sf %>% ggplot(aes(fill = COL_ADM_SE))+
geom_sf()+
theme_minimal()+
labs(title = "충청남도")
# Chunk 5
cheonan <- data_sf %>%
filter(COL_ADM_SE=="44130")
cheonan_seobuk <- cheonan %>%
filter(substr(EMD_CD,1,5)=="44133")
cheonan_dongnam <- cheonan %>%
filter(substr(EMD_CD,1,5)=="44131")
# Chunk 6
cheonan %>% ggplot(aes(fill=substr(EMD_CD,1,5)))+
geom_sf()+
theme_minimal()+
labs(title = "천안시 (구별)")+
scale_fill_discrete(name = "구",
labels = c("동남구","서북구"))
# Chunk 7
chsb <- cheonan_seobuk %>% ggplot(aes(fill=EMD_NM))+
geom_sf()+
geom_sf_text(mapping = aes(label = EMD_NM))+
labs(title = "천안시 서북구 (읍면동)")+
theme_minimal()+
scale_fill_discrete(name = "읍면동")
chsb %>% ggplotly()
# Chunk 8
chdn <- cheonan_dongnam %>% ggplot(aes(fill=EMD_NM))+
geom_sf()+
geom_sf_text(mapping = aes(label = EMD_NM))+
labs(title = "천안시 동남구 (읍면동)")+
theme_minimal()+
scale_fill_discrete(name = "읍면동")
chdn %>% ggplotly()
# Chunk 9
data <- read.csv("C:/trainsets_2/GEOCOMPS.csv")
data_sf <- data %>% st_as_sf(coords = c("Longitude","Latitude"))
st_crs(data_sf) <- 4737
st_crs(data_sf)
cheonan <- cheonan %>%
filter(EMD_NM!="광덕면")
gn <- ggplot()+
geom_sf(data = cheonan,fill=NA)+
geom_sf(data = data_sf,mapping = aes(color = 건축년도))+
scale_color_gradient(low = "blue", high = "red")+
theme_minimal()
gn %>% ggplotly()
# Chunk 10
data_nm_raw <- read.csv("C:/Users/sungi/Documents/linear_model_dataset_R.csv")
data_nm_raw <- data_nm_raw %>% mutate(평단가 = 거래금액/전용면적)
data_nm <- data_nm_raw %>%
group_by(아파트) %>%
summarize(평균거래액 = mean(평단가) %>% as.integer(),
Latitude = mean(Latitude),
Longitude = mean(Longitude)) %>%
mutate(정보 = paste(아파트,평균거래액,sep = ", 평단가 :"))
data_nm_sf <- data_nm %>% st_as_sf(coords = c("Longitude","Latitude"))
st_crs(data_nm_sf) <- 4737
cheonan <- cheonan %>%
filter(EMD_NM!="광덕면")
gn <- ggplot()+
geom_sf(data = cheonan,color = "black")+
geom_sf(data = data_nm_sf,aes(fill = 정보))+
theme_minimal()+
theme(legend.position = "none")
gn %>% ggplotly()
library(tmap)
nz
tmap_mode("view")
tm_shape(cheonan)
tm_shape(cheonan)+
tm_polygons(col="white")
tm_shape(cheonan)+
tm_polygons(col="white")
cheonan %>% st_crs()
st_crs(cheonan) <- 4326
st_crs(cheonan) <- 4326
cheonan %>% st_crs()
tm_shape(cheonan)+
tm_polygons(col="white")
tm_shape(cheonan)
tm_shape(cheonan)
cheonan
cheonan %>% head()
cheonan <- data_sf %>%
filter(COL_ADM_SE=="44130")
cheonan <- data_sf %>%
filter(COL_ADM_SE=="44130")
data_sp <- readOGR("C:/trainsets_2/LSMD_ADM_SECT_UMD_충남/LSMD_ADM_SECT_UMD_44.shp",encoding = "euc-kr")
data_sf = st_as_sf(data_sp)
data_sf %>% head()
cheonan <- data_sf %>%
filter(COL_ADM_SE=="44130")
cheonan_seobuk <- cheonan %>%
filter(substr(EMD_CD,1,5)=="44133")
cheonan_dongnam <- cheonan %>%
filter(substr(EMD_CD,1,5)=="44131")
cheonan %>% head()
tmap_shape(cheonan)
tm_shape(cheonan)
tm_shape(cheonan)
tm_shape(cheonan)
tm_shape(cheonan)+
tm_polygons(col = "white")
tm_shape(cheonan)+
tm_polygons(col = "white")
data_sp <- readOGR("C:/trainsets_2/LSMD_ADM_SECT_UMD_충남/LSMD_ADM_SECT_UMD_44.shp",encoding = "euc-kr")
View(data_sp)
tm_shape(data_sp)+
tm_polygons(col = "white")
tm_shape(data_sf)+
tm_polygons(col = "white")
gn %>% ggplotly()
```
#| warning: false
#| message: false
rm(list = ls())
library(sf)
library(tidyverse)
library(rgdal)
library(plotly)
library(ggtext)
data_sp <- readOGR("C:/trainsets_2/LSMD_ADM_SECT_UMD_충남/LSMD_ADM_SECT_UMD_44.shp",encoding = "euc-kr")
data_sf = st_as_sf(data_sp)
data_sf %>% head()
data_sf %>% ggplot(aes(fill = COL_ADM_SE))+
geom_sf()+
theme_minimal()+
labs(title = "충청남도")
cheonan <- data_sf %>%
filter(COL_ADM_SE=="44130")
cheonan_seobuk <- cheonan %>%
filter(substr(EMD_CD,1,5)=="44133")
cheonan_dongnam <- cheonan %>%
filter(substr(EMD_CD,1,5)=="44131")
cheonan %>% ggplot(aes(fill=substr(EMD_CD,1,5)))+
geom_sf()+
theme_minimal()+
labs(title = "천안시 (구별)")+
scale_fill_discrete(name = "구",
labels = c("동남구","서북구"))
chsb <- cheonan_seobuk %>% ggplot(aes(fill=EMD_NM))+
geom_sf()+
geom_sf_text(mapping = aes(label = EMD_NM))+
labs(title = "천안시 서북구 (읍면동)")+
theme_minimal()+
scale_fill_discrete(name = "읍면동")
chsb %>% ggplotly()
chdn <- cheonan_dongnam %>% ggplot(aes(fill=EMD_NM))+
geom_sf()+
geom_sf_text(mapping = aes(label = EMD_NM))+
labs(title = "천안시 동남구 (읍면동)")+
theme_minimal()+
scale_fill_discrete(name = "읍면동")
chdn %>% ggplotly()
data <- read.csv("C:/trainsets_2/GEOCOMPS.csv")
data_sf <- data %>% st_as_sf(coords = c("Longitude","Latitude"))
st_crs(data_sf) <- 4737
st_crs(data_sf)
cheonan <- cheonan %>%
filter(EMD_NM!="광덕면")
gn <- ggplot()+
geom_sf(data = cheonan,fill=NA)+
geom_sf(data = data_sf,mapping = aes(color = 건축년도))+
scale_color_gradient(low = "blue", high = "red")+
theme_minimal()
gn %>% ggplotly()
data_nm_raw <- read.csv("C:/Users/sungi/Documents/linear_model_dataset_R.csv")
data_nm_raw <- data_nm_raw %>% mutate(평단가 = 거래금액/전용면적)
data_nm <- data_nm_raw %>%
group_by(아파트) %>%
summarize(평균거래액 = mean(평단가) %>% as.integer(),
Latitude = mean(Latitude),
Longitude = mean(Longitude)) %>%
mutate(정보 = paste(아파트,평균거래액,sep = ", 평단가 :"))
data_nm_sf <- data_nm %>% st_as_sf(coords = c("Longitude","Latitude"))
st_crs(data_nm_sf) <- 4737
cheonan <- cheonan %>%
filter(EMD_NM!="광덕면")
gn <- ggplot()+
geom_sf(data = cheonan,color = "black")+
geom_sf(data = data_nm_sf,aes(fill = 정보))+
theme_minimal()+
theme(legend.position = "none")
gn %>% ggplotly()
cheonan
tmap_options(check.and.fix = TRUE)
tm_shape(cheonan)
tm_shape(cheonan)+
tm_polygons(col="white")
tm_shape(cheonan)+
tm_polygons(col="white")+
tm_shape(data_nm_sf)+
tm_symbols(shape = 2, col = "red", size = 0.25)
tm_shape(cheonan)+
tm_polygons(col="white")+
tm_shape(data_nm_sf)+
tm_symbols(shape = 2, col = "red", size = 0.1)
tm_shape(cheonan)+
tm_polygons(col="white")+
tm_shape(data_nm_sf)+
tm_symbols(shape = 2, col = "red", size = 0.05)
cheonan %>% head()
tm_shape(cheonan)+
tm_polygons(col="white")+
tm_shape(data_nm_sf)+
tm_symbols(shape = 2, col = "red", size = 0.05)+
tm_layout(main.title = "High points in New Zealand", main.title.size = 1,
bg.color = "lightblue")
tm_shape(cheonan["EMDNM"])+
tm_polygons(col="white")+
tm_shape(data_nm_sf)+
tm_symbols(shape = 2, col = "red", size = 0.05)+
tm_layout(main.title = "High points in New Zealand", main.title.size = 1,
bg.color = "lightblue")
tm_shape(cheonan["EMD_NM"])+
tm_polygons(col="white")+
tm_shape(data_nm_sf)+
tm_symbols(shape = 2, col = "red", size = 0.05)+
tm_layout(main.title = "High points in New Zealand", main.title.size = 1,
bg.color = "lightblue")
tm_shape(cheonan["EMD_NM"])+
tm_polygons(col="white",alpha = 0.5)+
tm_shape(data_nm_sf)+
tm_symbols(shape = 2, col = "red", size = 0.05)+
tm_layout(main.title = "High points in New Zealand", main.title.size = 1,
bg.color = "lightblue")
tm_shape(cheonan["EMD_NM"])+
tm_polygons(col="white",alpha = 0.3)+
tm_shape(data_nm_sf)+
tm_symbols(shape = 2, col = "red", size = 0.05)+
tm_layout(main.title = "High points in New Zealand", main.title.size = 1,
bg.color = "lightblue")
