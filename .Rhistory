corrplot(data_cor,
method = "shade",
addCoef.col="black",
#col = col(30),
tl.col = "black")
corrplot(data_cor,
method = "shade",
addCoef.col="black",
tl.col = "black",
col = col(30))
corrplot(data_cor,
method = "shade",
addCoef.col="black",
tl.col = "black")
data_cor <- cor(data %>% select(-c(price_per_pyeong)))
data_cor <- cor(data %>% select(-c(price_per_pyeong)))
corrplot(data_cor,
method = "shade",
addCoef.col="black",
tl.col = "black")
model <- lm(price_per_pyeong ~ year_built+floor+station_m+pop+dong_area+foreign_ratio+school_m + market_m,
data = data)
summary(model)
confint(model)
3e2
3.3e2
-2.98e-2
-2.98e2
data_cor <- cor(data)
corrplot(data_cor,
method = "shade",
addCoef.col="black",
tl.col = "black")
corrplot(data_cor,
method = "shade",
addCoef.col="black",
cl.cex = 2,
tl.col = "black")
corrplot(data_cor,
method = "shade",
addCoef.col="black",
tl.col = "black")
cor(data %>% select(price_per_pyeong,year_built))
model <- lm(price_per_pyeong~year_built,data = data)
summary(model)
model <- lm(price_per_pyeong~year_built,data = data)
summary(model)
plot(model)
data %>% select(price_per_pyeong,year_built) %>%
ggplot(aes(x=year_built,y=price_per_pyeong))+
geom_point()
data %>% select(price_per_pyeong,year_built) %>%
ggplot(aes(x=year_built,y=price_per_pyeong))+
geom_point()+
geom_abline(slope = "lm")
data %>% select(price_per_pyeong,year_built) %>%
ggplot(aes(x=year_built,y=price_per_pyeong))+
geom_point()+
geom_abline()
data %>% select(price_per_pyeong,year_built) %>%
ggplot(aes(x=year_built,y=price_per_pyeong))+
geom_point()+
geom_abline(method = "lm")
data %>% select(price_per_pyeong,year_built) %>%
ggplot(aes(x=year_built,y=price_per_pyeong))+
geom_point()+
geom_abline(method = "lm")
model$coefficients[1]
model$coefficients[1]+model$coefficients[2]*2000
model$coefficients[1]+model$coefficients[2]*2020
model$coefficients[1]+model$coefficients[2]*2023
data %>% select(price_per_pyeong,year_built) %>%
ggplot(aes(x=year_built,y=price_per_pyeong))+
geom_point()+
geom_abline(method = "lm")
data %>% select(price_per_pyeong,year_built) %>%
ggplot(aes(x=year_built,y=price_per_pyeong))+
geom_point()+
geom_smooth(method = "lm")
data %>% select(price_per_pyeong,year_built) %>%
ggplot(aes(x=year_built,y=price_per_pyeong))+
geom_point()+
geom_smooth(method = "lm",se = False)
data %>% select(price_per_pyeong,year_built) %>%
ggplot(aes(x=year_built,y=price_per_pyeong))+
geom_point()+
geom_smooth(method = "lm",se = FALSE)
plot(model)
data %>% ggplot(aes(y = price_per_pyeong))+
geom_boxplot()
shapiro.test(data$price_per_pyeong)
shapiro.test(data$price_per_pyeong**2)
data %>% select(price_per_pyeong,year_built) %>%
ggplot(aes(x=year_built,y=price_per_pyeong))+
geom_point()+
geom_smooth(method = "lm",se = FALSE)
plot(model)
model <- lm(price_per_pyeong ~ year_built+floor+station_m+pop+dong_area+foreign_ratio+school_m + market_m,
data = data)
summary(model)
plot(model)
plot(model)[1]
model %>% plot([1])
model %>% plot()[1]
model %>% plot()
model %>% plot()[1]
plot(model)[1]
plot(model)[[1]]
plot(model)[1,]
plot(model)[,1]
plot(model)[1]
plot(model)[2]
par(mfrow=c(1,1))
plot(model)
par(mfrow=c(2,2))
plot(model)
par(mfrow=c(1,1))
plot(model)
plot_summary <- plot(model)
plot[1]
plot_summary <- plot(model)
plot[1]
plot(model)
plot(model)
plot(model).1
plot(model)
plot(model)[1]
plot(model)[2]
plot(model)
model_2 <- step(model,direction = "backward")
model_2 %>% summary
plot(model_2)
library(readxl)
library(tidyverse)
library(corrplot)
data <- read_excel("C:/linear_model_dataset_R.xlsx")
data <- data %>% select(-c(Latitude,Longitude))
names(data) <- c("year_built","floor","station_m","pop","dong_area","foreign_ratio","school_m","market_m","price_per_pyeong")
data %>% head()
data_cor <- cor(data)
corrplot(data_cor,
method = "shade",
addCoef.col="black",
tl.col = "black")
model <- lm(price_per_pyeong ~ year_built+floor+station_m+pop+dong_area+foreign_ratio+school_m + market_m,
data = data)
summary(model)
plot(model)
model_2 <- step(model,direction = "backward")
model_2 %>% summary
plot(model_2)
model
model$residuals
model$residuals %>% plot()
model$residuals %>% hist()
plot(model)
model$residuals %>% hist()
model$residuals %>% shapiro.test()
plot(model)
data
data[859,]
data[c(859,770),]
data[c(855,859,770),]
data[c(-855,-859,-770),]
data_2 <- data[c(-855,-859,-770),]
model_2 <- lm(price_per_pyeong ~ year_built+floor+station_m+pop+dong_area+foreign_ratio+school_m + market_m,
data = data_2)
summary(model_2)
model_2 <- lm(price_per_pyeong ~ year_built+floor+station_m+pop+dong_area+foreign_ratio+school_m + market_m,
data = data_2)
summary(model_2)
plot(model_2)
model_2$residuals %>% shapiro.test()
plot(model_2)
data_2 <- data[c(-855,-859,-770,-850,-838),]
model_2 <- lm(price_per_pyeong ~ year_built+floor+station_m+pop+dong_area+foreign_ratio+school_m + market_m,
data = data_2)
plot(model_2)
model_2$residuals %>% shapiro.test()
plot(model_2)
data_2 <- data[c(-855,-859,-770,-850,-838,-848,-837),]
model_2 <- lm(price_per_pyeong ~ year_built+floor+station_m+pop+dong_area+foreign_ratio+school_m + market_m,
data = data_2)
plot(model_2)
model_2$residuals %>% shapiro.test()
data_2 <- data[c(-770:-859),]
model_2 <- lm(price_per_pyeong ~ year_built+floor+station_m+pop+dong_area+foreign_ratio+school_m + market_m,
data = data_2)
plot(model_2)
model_2$residuals %>% shapiro.test()
plot(model_2)
data_2 <- data[c(-770:-859),]
View(data_2)
data_2 <- data[c(-770:-859),]
model_2 <- lm(price_per_pyeong ~ year_built+floor+station_m+pop+dong_area+foreign_ratio+school_m + market_m,
data = data_2)
plot(model_2)
model_2$residuals %>% shapiro.test()
data_2 <- data[c(-700:-859),]
model_2 <- lm(price_per_pyeong ~ year_built+floor+station_m+pop+dong_area+foreign_ratio+school_m + market_m,
data = data_2)
plot(model_2)
model_2$residuals %>% shapiro.test()
data[c(-700:-859),]
data_2 <- data[c(-700:-859),]
model_2 <- lm(price_per_pyeong ~ year_built+floor+station_m+pop+dong_area+foreign_ratio+school_m + market_m,
data = data_2)
plot(model_2)
model_2$residuals %>% shapiro.test()
data_2 <- data[c(0:500),]
model_2 <- lm(price_per_pyeong ~ year_built+floor+station_m+pop+dong_area+foreign_ratio+school_m + market_m,
data = data_2)
plot(model_2)
model_2$residuals %>% shapiro.test()
plot(model)
model$residuals %>% hist()
model$residuals %>% shapiro.test()
rm(list = ls())
library(tidyverse)
mtcars <- mtcars
mtcars %>% head()
model <- lm(mpg ~ wt, data = mtcars)
summary(model)
ggplot(mtcars, aes(x=wt, y=mpg)) +
geom_point() +
geom_smooth(method='lm', se=FALSE) +
ggtitle("Linear Regression of mpg ~ wt")
plot(model)
newdata <- data.frame(wt=c(3,4))
predictions <- predict(model, newdata=newdata)
predictions
beta0 <- model$coefficients[[1]][1]
beta1 <- model$coefficients[[2]][1]
newdata_mpg <- data.frame(mpg = c(beta0 + beta1*3, beta0 + beta1*4))
newdata <- cbind(newdata,newdata_mpg)
newdata
mtcars %>% head()
model_2 <- lm(mpg ~ cyl+disp+hp+drat+wt+qsec+factor(vs)+factor(am)+factor(gear)+factor(carb), data=mtcars)
summary(model_2)
model_3 <- step(model_2,direction = "backward")
summary(model_3)
model_3 %>% summary
anova(model_2,model_3)
model$residuals %>% shapiro.test()
model$residuals %>% hist()
model$residuals %>% shapiro.test()
model$residuals %>% hist()
mtcars %>% mutate(mpg^2 = mpg^2)
mtcars %>% mutate(mpg^2 = mpg**2)
mtcars %>% mutate(mpg_2 = mpg**2)
mtcars %>% head()
mtcars <- mtcars %>% mutate(mpg_2 = mpg**2)
mtcars %>% head()
model <- lm(mpg_2 ~ wt, data = mtcars)
summary(model)
model$residuals %>% shapiro.test()
model$residuals %>% hist()
rm(list = ls())
mtcars <- mtcars
mtcars %>% head()
model <- lm(mpg_2 ~ wt, data = mtcars)
model <- lm(mpg_2 ~ wt, data = mtcars)
model <- lm(mpg ~ wt, data = mtcars)
summary(model)
model$residuals %>% shapiro.test()
model$residuals %>% hist()
library(readxl)
library(tidyverse)
library(corrplot)
data <- read_excel("C:/linear_model_dataset_R.xlsx")
data <- data %>% select(-c(Latitude,Longitude))
names(data) <- c("year_built","floor","station_m","pop","dong_area","foreign_ratio","school_m","market_m","price_per_pyeong")
data %>% head()
data_cor <- cor(data)
corrplot(data_cor,
method = "shade",
addCoef.col="black",
tl.col = "black")
model <- lm(price_per_pyeong ~ year_built+floor+station_m+pop+dong_area+foreign_ratio+school_m + market_m,
data = data)
summary(model)
plot(model)
model$residuals %>% hist()
model$residuals %>% shapiro.test()
model_2 <- step(model,direction = "backward")
model_2 %>% summary
plot(model_2)
7.514e-14
7e-11
paste(7e-11)
7e-2
7e-1
model$residuals %>% mean()
data_cor
data_cor <- cor(data)
data_cor
corrplot(data_cor,
method = "shade",
addCoef.col="black",
tl.col = "black")
plot(model)
library(car)
durbinWatsonTest(model)
install.packages(gvlma)
install.packages("gvlma")
library(gvlma)
gvmodel <- gvlma(model)
summary(gvmodel)
vif(model)
model_2 <- lm(mpg~wt+disp,data = mtcars)
summary(model_2)
model_2 %>% resid()
resid <- resid(model_2)
hist(resid)
qqnorm(resid)
qqline(resid)
qqnorm(resid)
qqline(resid)
plot(fitted(model_2),resid)
plot(mtcars$wt,resid)
# Chunk 1
library(tidyverse)
library(knitr)
library(plotly)
library(readxl)
library(scales)
# Chunk 2
mtcars <- mtcars
mtcars %>% head()
# Chunk 3
vehicles <- c("Four Cylinders","Six Cylinders","Eight Cylinders")
cylinders <- mtcars %>% group_by(cyl) %>% summarize(cnt = n())
veh_cyl <- tibble(vehicles, cylinders$cnt)
plot_ly(data = veh_cyl, x = vehicles, y = cylinders$cnt, type = "bar",
text = cylinders, textposition = "auto") %>%
layout(title = "Number of Vehicles in mtcars with 4, 6, and 8 Cylinders",
titlefont = list(size = 28, color = "orange", family = "Calibri"),
yaxis = list(title = "Number of Vehicles",
font = list(color = "black", family = "Arial", size = 26),
tickfont = list(color = "black", family = "Arial", size = 20)),
xaxis = list(title = "Number of Cylinders",
titlefont = list(color = "red", family = "Times New Roman", size = 22),
tickfont = list(color = "green", family = "Cambria", size = 18)))%>%
layout(margin = list(
l = 10,
r = 10,
b = 0,
t = 40))
# Chunk 4
veh <- mtcars %>%
group_by(cyl) %>%
summarize(cnt =n()) %>%
mutate(cyl = factor(cyl))
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = "Numberof Vehicles per cylinders",
titlefont = list(size=28, color="orange", family= "Calibri"))
# Chunk 5
library(nycflights13)
dep.delay.by.day <- flights %>%
group_by(day) %>%
summarise (mean_dep_delay=mean(dep_delay,na.rm=T))
plot_ly( data = dep.delay.by.day,
x = ~day,
y =~mean_dep_delay) %>%
add_trace(type = "scatter" ,mode = "lines+markers")
# Chunk 6
library(gapminder)
df <- gapminder
# No animation
fig <- df %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers',
fill = ~''
) %>% layout(
xaxis = list(type = "log"))
fig
# Chunk 7
fig <- df %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers',
fill = ~''
) %>% layout(
xaxis = list(type = "log"))
fig
# Chunk 8
p1 <- diamonds %>% ggplot(aes(x = cut, fill = clarity))+
geom_bar(position = "dodge")
ggplotly(p1)
axx <- list(
nticks = 4,
range = c(-25,75)
)
axy <- list(
nticks = 4,
range = c(-25,75)
)
axz <- list(
nticks = 4,
range = c(0,50)
)
View(axx)
x <- 70*(runif(70, 0, 1))
y <- 55*(runif(70, 0, 1))
z <- 40*(runif(70, 0, 1))
fig <- plot_ly(x = ~x, y = ~y, z = ~z, type = 'mesh3d')
fig <- fig %>% layout(scene = list(xaxis=axx,yaxis=axy,zaxis=axz))
fig
View(axx)
library(plotly)
fig <- plot_ly()
# fig <- fig %>% add_trace( ... )
# fig <- fig %>% layout( ... )
library(dash)
install.packages(c("dash","dashCoreComponents","dashHtmlComponents"))
library(dash)
library(sf)
library(tidyverse)
library(rgdal)
library(sp)
data_sp <- readOGR("C:/trainsets_2/LSMD_ADM_SECT_UMD_충남/LSMD_ADM_SECT_UMD_44.shp",encoding = "euc-kr")
data_sf = st_as_sf(data_sp)
data_sf %>% head()
data_sf %>% ggplot(aes(fill = COL_ADM_SE))+
geom_sf()+
theme_minimal()+
labs(title = "충청남도")
cheonan <- data_sf %>% filter(COL_ADM_SE=="44130")
cheonan_seobuk <- cheonan %>%
filter(substr(EMD_CD,1,5)=="44133")
cheonan_dongnam <- cheonan %>%
filter(substr(EMD_CD,1,5)=="44131")
saveRDS(cheonan, file = "cheonan_geo.rds")
cheonan <- readRDS("C:/cheonan_geo.rds")
cheonan
View(cheonan)
cheonan %>% plot
cheonan %>% plot()[1]
library(sf)
plot_ly(cheonan)
fig_2 <- plot_ly(cheonan)
fig_2
library(sf)
library(tidyverse)
library(rgdal)
data_sp <- readOGR("C:/trainsets_2/LSMD_ADM_SECT_UMD_충남/LSMD_ADM_SECT_UMD_44.shp",encoding = "euc-kr")
data_sf = st_as_sf(data_sp)
data_sf %>% head()
data_sf %>% ggplot(aes(fill = COL_ADM_SE))+
geom_sf()+
theme_minimal()+
labs(title = "충청남도")
cheonan <- data_sf %>% filter(COL_ADM_SE=="44130")
cheonan_seobuk <- cheonan %>%
filter(substr(EMD_CD,1,5)=="44133")
cheonan_dongnam <- cheonan %>%
filter(substr(EMD_CD,1,5)=="44131")
cheonan %>% ggplot(aes(fill=substr(EMD_CD,1,5)))+
geom_sf()+
theme_minimal()+
labs(title = "천안시 (구별)")+
scale_fill_discrete(name = "구",
labels = c("동남구","서북구"))
cheonan_seobuk %>% ggplot(aes(fill=EMD_NM))+
geom_sf()+
geom_sf_text(mapping = aes(label = EMD_NM))+
labs(title = "천안시 서북구 (읍면동)")+
theme_minimal()+
scale_fill_discrete(name = "읍면동")
cheonan_dongnam %>% ggplot(aes(fill=EMD_NM))+
geom_sf()+
geom_sf_text(mapping = aes(label = EMD_NM))+
labs(title = "천안시 동남구 (읍면동)")+
theme_minimal()+
scale_fill_discrete(name = "읍면동")
data <- read.csv("C:/trainsets_2/GEOCOMPS.csv")
data_sf <- data %>% st_as_sf(coords = c("Longitude","Latitude"))
st_crs(data_sf) <- 4737
st_crs(data_sf)
ggplot()+
geom_sf(data = cheonan_map,color = "black")+
geom_sf(data = data_sf,mapping = aes(color = 건축년도))+
scale_color_gradient(low = "blue", high = "red")+
theme_minimal()
ggplot()+
geom_sf(data = cheonan,color = "black")+
geom_sf(data = data_sf,mapping = aes(color = 건축년도))+
scale_color_gradient(low = "blue", high = "red")+
theme_minimal()
gn<-ggplot()+
geom_sf(data = cheonan,color = "black")+
geom_sf(data = data_sf,mapping = aes(color = 건축년도))+
scale_color_gradient(low = "blue", high = "red")+
theme_minimal()
gn
library(plotly)
gn %>% ggplotly()
gn %>% ggplotly()
