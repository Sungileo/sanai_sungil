income_df <- income_by_age %>%
filter(race %in% c("white","asian","black","hispanic")) %>%
mutate(race = fct_relevel(race,c("white","asian","black","hispanic")),
race = fct_recode(race,"Asian"="asian","Hispanic"="hispanic"),
age = fct_recode(age,">= 75" = ">74"))
income_df <- income_by_age %>%
filter(race %in% c("white","asian","black","hispanic")) %>%
mutate(race = fct_relevel(race,c("white","asian","black","hispanic")),
race = fct_recode(race,"Asian"="asian","Hispanic"="hispanic"),
age = fct_recode(age,">= 75" = "> 74"))
View(income_df)
ggplot(income_df,aes(x=age))
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge")
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge",alpha = 0.9)
colors_four <- RColorBrewer::brewer.pal(5,"PuBu")[5:2]
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge",alpha = 0.9)+
scale_fill_manual(values = colors_four,name=NULL)
income_by_age <- read.csv("https://raw.githubusercontent.com/Sungileo/trainsets/main/income_by_age.csv")
income_by_age <- income_by_age %>%
mutate(age = age %>% factor(levels = c("15 to 24",
"25 to 34",
"35 to 44",
"45 to 54",
"55 to 64",
"65 to 74",
"> 74")))
income_df <- income_by_age %>%
filter(race %in% c("white","asian","black","hispanic")) %>%
mutate(race = fct_relevel(race,c("asian","white","hispanic","black")),
race = fct_recode(race,"Asian"="asian","Hispanic"="hispanic"),
age = fct_recode(age,">= 75" = "> 74"))
colors_four <- RColorBrewer::brewer.pal(5,"PuBu")[5:2]
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge",alpha = 0.9)+
scale_fill_manual(values = colors_four,name=NULL)
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge",alpha = 0.9)+
scale_fill_manual(values = colors_four,name=NULL)+
xlab("age (years)")
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge",alpha = 0.9)+
scale_fill_manual(values = colors_four,name=NULL)+
xlab("age (years)")+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000))
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge",alpha = 0.9)+
scale_fill_manual(values = colors_four,name=NULL)+
xlab("age (years)")+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste())
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge",alpha = 0.9)+
scale_fill_manual(values = colors_four,name=NULL)+
xlab("age (years)")+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste(sep = ,))
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge",alpha = 0.9)+
scale_fill_manual(values = colors_four,name=NULL)+
xlab("age (years)")+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste(sep = ","))
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge",alpha = 0.9)+
scale_fill_manual(values = colors_four,name=NULL)+
xlab("age (years)")+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste())
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge",alpha = 0.9)+
scale_fill_manual(values = colors_four,name=NULL)+
xlab("age (years)")+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste(seq(0,100,20)*1000)))
labels = c(seq(0,100,20)*1000) %>% paste()
geom_col(position = "dodge",alpha = 0.9)+
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge",alpha = 0.9)+
scale_fill_manual(values = colors_four,name=NULL)+
xlab("age (years)")+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste())
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge",alpha = 0.9)+
scale_fill_manual(values = colors_four,name=NULL)+
xlab("age (years)")+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste())
income_df %>% ggplot(aes(x=age,y=median_income,fill=race))+
geom_col(position = "dodge",alpha = 0.9)+
scale_fill_manual(values = colors_four,name=NULL)+
xlab("age (years)")+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste())+
theme_minimal()
income_df %>% ggplot(aes(x=race,y=median_income,fill=age))+
geom_col(position = "dodge",alpha=0.9)
income_df %>% ggplot(aes(x=race,y=median_income,fill=age))+
geom_col(position = "dodge",alpha=0.9)+
scale_fill_manual(values = colors_seven,name=NULL)+
xlab(NULL)+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste())+
theme_minimal()
colors_seven <- RColorBrewer::brewer.pal(8,"PuBu")[2:8]
income_df %>% ggplot(aes(x=race,y=median_income,fill=age))+
geom_col(position = "dodge",alpha=0.9)+
scale_fill_manual(values = colors_seven,name=NULL)+
xlab(NULL)+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste())+
theme_minimal()
income_df %>% ggplot(aes(x=age,y=median_income))+
geom_col(fill = "#56b4e9",alpha = 0.9)+
xlab("age (years)")+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste())+
theme_minimal()+
facet_wrap(~race, scales ="free_x")
income_df %>% ggplot(aes(x=age,y=median_income))+
geom_col(fill = "#56b4e9",alpha = 0.9)+
xlab("age (years)")+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste())+
theme_minimal()+
theme(panel.grid.major.x = element_blank(),
axis.ticks.x = element_blank())
income_df %>% ggplot(aes(x=age,y=median_income))+
geom_col(fill = "#56b4e9",alpha = 0.9)+
xlab("age (years)")+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste())+
theme_minimal()+
theme(panel.grid.major.x = element_blank(),
axis.ticks.x = element_blank())+
facet_wrap(~race, scales ="free_x")
seq(0,100,20)
seq(0,100,20)*1000
seq(0,100,20)*1000 %>% paste()
c(seq(0,100,20)*1000) %>% paste()
c(seq(0,101,20)*1000) %>% paste()
c(seq(0,100,20)*1000) %>% paste()
c(seq(0,120,20)*1000) %>% paste()
c(seq(0,100,20)*1000) %>% paste()
c(seq(0,100,20)*1000) %>% paste(collapse = )
c(seq(0,100,20)*1000) %>% paste()
income_df %>% ggplot(aes(x=age,y=median_income))+
geom_col(fill = "#56b4e9",alpha = 0.9)+
xlab("age (years)")+
scale_y_continuous(expand = c(0,0),
name = "Median income (USD)",
breaks = c(seq(0,100,20)*1000),
labels = c(seq(0,100,20)*1000) %>% paste()+
theme_minimal()+
theme(panel.grid.major.x = element_blank(),
axis.ticks.x = element_blank())+
facet_wrap(~race, scales ="free_x")
library(tidyverse)
library(knitr)
library(plotly)
library(readxl)
library(scales)
mtcars <- mtcars
mtcars %>% head()
vehicles <- c("Four Cylinders","Six Cylinders","Eight Cylinders")
cylinders <- c(sum(mtcars$cyl==4), sum(mtcars$cyl==6), sum(mtcars$cyl==8))
veh_cyl <- tibble(vehicles, cylinders)
plot_ly(data = veh_cyl, x = vehicles, y = cylinders, type = "bar",
text = cylinders, textposition = "auto") %>%
layout(title = "Number of Vehicles in mtcars with 4, 6, and 8 Cylinders",
titlefont = list(size = 28, color = "orange", family = "Calibri"),
yaxis = list(title = "Number of Vehicles",
titlefont = list(color = "black", family = "Arial", size = 26),
tickfont = list(color = "black", family = "Arial", size = 20)),
xaxis = list(title = "Number of Cylinders",
titlefont = list(color = "red", family = "Times New Roman", size = 22),
tickfont = list(color = "green", family = "Cambria", size = 18)))%>%
layout(margin = list(
l = 10,
r = 10,
b = 0,
t = 40))
plot_ly(data = veh_cyl, x = vehicles, y = cylinders, type = "bar",
text = cylinders, textposition = "auto") %>%
layout(title = "Number of Vehicles in mtcars with 4, 6, and 8 Cylinders",
titlefont = list(size = 28, color = "orange", family = "Calibri"),
yaxis = list(title = "Number of Vehicles",
titlefont = list(color = "black", family = "Arial", size = 26),
tickfont = list(color = "black", family = "Arial", size = 20)),
xaxis = list(title = "Number of Cylinders",
titlefont = list(color = "red", family = "Times New Roman", size = 22),
tickfont = list(color = "green", family = "Cambria", size = 18)))%>%
layout(margin = list(
l = 10,
r = 10,
b = 0,
t = 40))
plot_ly(data = veh_cyl, x = vehicles, y = cylinders, type = "bar",
text = cylinders, textposition = "auto") %>%
layout(title = "Number of Vehicles in mtcars with 4, 6, and 8 Cylinders",
titlefont = list(size = 28, color = "orange", family = "Calibri"),
yaxis = list(title = "Number of Vehicles",
font = list(color = "black", family = "Arial", size = 26),
tickfont = list(color = "black", family = "Arial", size = 20)),
xaxis = list(title = "Number of Cylinders",
titlefont = list(color = "red", family = "Times New Roman", size = 22),
tickfont = list(color = "green", family = "Cambria", size = 18)))%>%
layout(margin = list(
l = 10,
r = 10,
b = 0,
t = 40))
cylinders <- mtcars %>% group_by(cylinders) %>% summarize(cnt = n())
cylinders <- mtcars %>% dplyr::group_by(cylinders) %>% summarize(cnt = n())
cylinders <- mtcars %>% group_by(cyl) %>% summarize(cnt = n())
cylinders
veh_cyl
veh_cyl <- mtcars %>% group_by(cyl) %>% summarize(cnt = n())
veh_cyl
veh_cyl <- mtcars %>% group_by(cyl) %>% summarize(cnt = n())
veh_cyl
View(veh_cyl)
plot_ly(data = veh_cyl,x=cyl,y=cnt,type="bar")
vehicles <- c("Four Cylinders","Six Cylinders","Eight Cylinders")
cylinders <- c(sum(mtcars$cyl==4), sum(mtcars$cyl==6), sum(mtcars$cyl==8))
veh_cyl <- tibble(vehicles, cylinders)
plot_ly(data = veh_cyl, x = vehicles, y = cylinders, type = "bar",
text = cylinders, textposition = "auto") %>%
layout(title = "Number of Vehicles in mtcars with 4, 6, and 8 Cylinders",
titlefont = list(size = 28, color = "orange", family = "Calibri"),
yaxis = list(title = "Number of Vehicles",
font = list(color = "black", family = "Arial", size = 26),
tickfont = list(color = "black", family = "Arial", size = 20)),
xaxis = list(title = "Number of Cylinders",
titlefont = list(color = "red", family = "Times New Roman", size = 22),
tickfont = list(color = "green", family = "Cambria", size = 18)))%>%
layout(margin = list(
l = 10,
r = 10,
b = 0,
t = 40))
View(veh_cyl)
veh_cyl$cylinders
veh_cyl <- mtcars %>% group_by(cyl) %>% summarize(cnt = n())
veh_cyl$cnt
vehicles <- c("Four Cylinders","Six Cylinders","Eight Cylinders")
cylinders <- mtcars %>% group_by(cyl) %>% summarize(cnt = n())
veh_cyl <- tibble(vehicles, cylinders$cnt)
View(veh_cyl)
plot_ly(data = veh_cyl, x = vehicles, y = cylinders, type = "bar",
text = cylinders, textposition = "auto") %>%
layout(title = "Number of Vehicles in mtcars with 4, 6, and 8 Cylinders",
titlefont = list(size = 28, color = "orange", family = "Calibri"),
yaxis = list(title = "Number of Vehicles",
font = list(color = "black", family = "Arial", size = 26),
tickfont = list(color = "black", family = "Arial", size = 20)),
xaxis = list(title = "Number of Cylinders",
titlefont = list(color = "red", family = "Times New Roman", size = 22),
tickfont = list(color = "green", family = "Cambria", size = 18)))%>%
layout(margin = list(
l = 10,
r = 10,
b = 0,
t = 40))
vehicles <- c("Four Cylinders","Six Cylinders","Eight Cylinders")
cylinders <- mtcars %>% group_by(cyl) %>% summarize(cnt = n())
veh_cyl <- tibble(vehicles, cylinders$cnt)
View(veh_cyl)
View(veh_cyl)
plot_ly(data = veh_cyl, x = vehicles, y = cylinders$cnt, type = "bar",
text = cylinders, textposition = "auto") %>%
layout(title = "Number of Vehicles in mtcars with 4, 6, and 8 Cylinders",
titlefont = list(size = 28, color = "orange", family = "Calibri"),
yaxis = list(title = "Number of Vehicles",
font = list(color = "black", family = "Arial", size = 26),
tickfont = list(color = "black", family = "Arial", size = 20)),
xaxis = list(title = "Number of Cylinders",
titlefont = list(color = "red", family = "Times New Roman", size = 22),
tickfont = list(color = "green", family = "Cambria", size = 18)))%>%
layout(margin = list(
l = 10,
r = 10,
b = 0,
t = 40))
mtcars %>% group_by(cyl) %>% summarize(cnt =n())
mtcars %>% group_by(cyl) %>% summarize(cnt =n()) %>% View()
mtcars %>%
group_by(cyl) %>%
summarize(cnt =n()) %>%
mutate(cyl = factor(cyl))
mtcars %>%
group_by(cyl) %>%
summarize(cnt =n()) %>%
mutate(cyl = factor(cyl)) %>% View()
View(veh_cyl)
veh <- mtcars %>%
group_by(cyl) %>%
summarize(cnt =n()) %>%
mutate(cyl = factor(cyl)) %>% View()
veh <- mtcars %>%
group_by(cyl) %>%
summarize(cnt =n()) %>%
mutate(cyl = factor(cyl))
View(veh)
plot_ly(data = veh,x=cyl,y=cnt,type="bar")
cyl <- veh$cyl
plot_ly(data = veh,x=cyl,y=cnt,type="bar")
cnt <- veh$cnt
plot_ly(data = veh,x=cyl,y=cnt,type="bar")
plot_ly(data = veh,x=veh$cyl,y=veh$cnt,type="bar")
rm(list = ls())
mtcars <- mtcars
veh <- mtcars %>%
group_by(cyl) %>%
summarize(cnt =n()) %>%
mutate(cyl = factor(cyl))
plot_ly(data = veh,x=veh$cyl,y=veh$cnt,type="bar")
plot_ly(data = veh,x=veh$cyl,y=veh$cnt,type="bar",text = cyl)
plot_ly(data = veh,x=veh$cyl,y=veh$cnt,type="bar",text = veh$cyl)
veh %>% plot_ly(x=cyl,y=cnt,type = "bar")
veh %>% plot_ly(x=cyl,y=cnt,type = "bar")
plot_ly(data = veh,x=veh$cyl,y=veh$cnt,type="bar",text = veh$cyl)
library(nycflights13)
dep.delay.by.day <- flights %>%
group_by(day) %>%
summarise (mean_dep_delay=mean(dep_delay,na.rm=T))
plot_ly( data = dep.delay.by.day,
x = ~day,
y =~mean_dep_delay) %>%
add_trace(type = "scatter" ,mode = "lines+markers")
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = veh$cyl)
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl)
plot_ly( data = dep.delay.by.day,
x = ~day,
y =~mean_dep_delay) %>%
add_trace(type = "scatter" ,mode = "lines+markers")
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl)
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto")
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = "Number of Vehicles per cylinders")
font = list(size=28, color="orange", family= "Calibri")
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
font = list(size=28, color="orange", family= "Calibri")
titlefont = list(size=28, color="orange", family= "Calibri")
layout(title = "Number of Vehicles per cylinders",titlefont = list(size=28, color="orange", family= "Calibri")
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = "Number of Vehicles per cylinders",titlefont = list(size=28, color="orange", family= "Calibri")
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>% layout(title = "Number of Vehicles per cylinders",titlefont = list(size=28, color="orange", family= "Calibri")
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>% layout(title = "Number of Vehicles per cylinders",titlefont = list(size=28, color="orange", family= "Calibri")
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = "Number of Vehicles per cylinders",
titlefont = list(size=28, color="orange", family= "Calibri"))
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = "Number of Vehicles per cylinders",
font = list(size=28, color="orange", family= "Calibri"))
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = list(size=28, color="orange", family= "Calibri"))
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = list(title = "ss",size=28, color="orange", family= "Calibri"))
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = list(main = "ss",size=28, color="orange", family= "Calibri"))
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = list(main = "ss",size=28, color="orange", family= "Calibri"))
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = list(main = "ssssss",size=28, color="orange", family= "Calibri"))
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = list(main = "ssssss",size=28, color="orange", family= "Calibri"))
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = "Numberof Vehicles per cylinders",
list(size=28, color="orange", family= "Calibri"))
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = "Numberof Vehicles per cylinders",
titlefont = list(size=28, color="orange", family= "Calibri"))
library(gapminder)
install.packages("gapminder")
library(gapminder)
df <- gapminder
View(df)
# No animation
fig <- df %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers',
fill = ~''
) %>% layout(
xaxis = list(type = "log"))
fig
fig <- df %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers',
fill = ~''
) %>% layout(
xaxis = list(type = "log"))
fig
library(tidyverse)
library(knitr)
library(plotly)
library(readxl)
library(scales)
mtcars <- mtcars
mtcars %>% head()
vehicles <- c("Four Cylinders","Six Cylinders","Eight Cylinders")
cylinders <- mtcars %>% group_by(cyl) %>% summarize(cnt = n())
veh_cyl <- tibble(vehicles, cylinders$cnt)
plot_ly(data = veh_cyl, x = vehicles, y = cylinders$cnt, type = "bar",
text = cylinders, textposition = "auto") %>%
layout(title = "Number of Vehicles in mtcars with 4, 6, and 8 Cylinders",
titlefont = list(size = 28, color = "orange", family = "Calibri"),
yaxis = list(title = "Number of Vehicles",
font = list(color = "black", family = "Arial", size = 26),
tickfont = list(color = "black", family = "Arial", size = 20)),
xaxis = list(title = "Number of Cylinders",
titlefont = list(color = "red", family = "Times New Roman", size = 22),
tickfont = list(color = "green", family = "Cambria", size = 18)))%>%
layout(margin = list(
l = 10,
r = 10,
b = 0,
t = 40))
veh <- mtcars %>%
group_by(cyl) %>%
summarize(cnt =n()) %>%
mutate(cyl = factor(cyl))
plot_ly(data = veh,x=~cyl,y=~cnt,type="bar",text = ~cyl,textposition = "auto") %>%
layout(title = "Numberof Vehicles per cylinders",
titlefont = list(size=28, color="orange", family= "Calibri"))
library(nycflights13)
dep.delay.by.day <- flights %>%
group_by(day) %>%
summarise (mean_dep_delay=mean(dep_delay,na.rm=T))
plot_ly( data = dep.delay.by.day,
x = ~day,
y =~mean_dep_delay) %>%
add_trace(type = "scatter" ,mode = "lines+markers")
library(gapminder)
df <- gapminder
# No animation
fig <- df %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers',
fill = ~''
) %>% layout(
xaxis = list(type = "log"))
fig
fig <- df %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers',
fill = ~''
) %>% layout(
xaxis = list(type = "log"))
fig
