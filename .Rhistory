upper_fruit.append(f.upper())
print(upper_fruit)
fruit = ["apple","banana", "cherry"]
upper_fruit = []
# for 루프를 사용하여 리스트의 각 요소를 대문자로 변환하여 빈 리스트에 추가
for x in fruit:
upper_fruit.append(x.upper())
print(upper_fruit)
total = 0
for i in range(1, 1000):
if i % 5 == 0 or i % 7 == 0:
total += i
print("총합:", total)
total = []
for i in range(1, 1000):
if i % 5 == 0 or i % 7 == 0:
total.append(i)
print("총합:", total)
a = (1,2,3,4,5,6,7,8,9,10)
a = [1,2,3,4,5,6,7,8,9,10]
quit
import random
```{random}
reticulate::repl_python()
```{python}
import random
you=random.sample(['묵비권','협조'],1)
you=random.sample(['묵비권','협조'],1)
me_decision=[]
me_term=[]
you_decision=[]
you_term=[]
import random
for k in range(1,1001):
me=['협조']
you=random.sample(['묵비권','협조'],1)
me_decision.append(me)
you_decision.append(you)
if you==me:
me_term.append(5)
you_term.append(5)
else:
me_term.append(0)
you_term.append(10)
print(me_decision, me_term, you_decision, you_term)
print('내형량',sum(me_term)/1000,'공범형량',sum(you_term)/1000)
me_decision=[]
me_term=[]
you_decision=[]
you_term=[]
import random
for k in range(1,1001):
me=['협조']
you=random.sample(['묵비권','협조'],1)
me_decision.append(me)
you_decision.append(you)
if you==me:
me_term.append(5)
you_term.append(5)
else:
me_term.append(0)
you_term.append(10)
print(me_decision, me_term, you_decision, you_term)
print('내형량',sum(me_term)/1000,'공범형량',sum(you_term)/1000)
me_decision=[]
me_term=[]
you_decision=[]
you_term=[]
import random
for k in range(1,1001):
me=['협조']
you=random.sample(['묵비권','협조'],1)
me_decision.append(me)
you_decision.append(you)
if you==me:
me_term.append(5)
you_term.append(5)
else:
me_term.append(0)
you_term.append(10)
print(me_decision, me_term, you_decision, you_term)
print('내형량',sum(me_term)/1000,'공범형량',sum(you_term)/1000)
me_decision=[]
me_term=[]
you_decision=[]
you_term=[]
import random
for k in range(1,1001):
me=['협조']
you=random.sample(['묵비권','협조'],1)
me_decision.append(me)
you_decision.append(you)
if you==me:
me_term.append(5)
you_term.append(5)
else:
me_term.append(0)
you_term.append(10)
print(me_decision, me_term, you_decision, you_term)
print('내형량',sum(me_term)/1000,'공범형량',sum(you_term)/1000)
quit
print(upper_fruit)
reticulate::repl_python()
fruit = ["apple","banana", "cherry"]
upper_fruit = []
# for 루프를 사용하여 리스트의 각 요소를 대문자로 변환하여 빈 리스트에 추가
for x in fruit:
upper_fruit.append(x.upper())
print(upper_fruit)
fruit = ["apple","banana", "cherry"]
for x in fruit:
print(i'm x)
print("i'm" x)
print(x)
fruit = ["apple","banana", "cherry"]
for x in fruit:
print(x)
fruit = ["apple","banana", "cherry"]
for x in fruit:
print(x)
fruit = ["apple","banana", "cherry"]
for x in fruit:
print(x)
fruit = ["apple","banana", "cherry"]
for x in fruit:
print(x)
fruit = ["apple","banana", "cherry"]
for x in fruit:
print(x)
fruit = ["apple","banana", "cherry"]
for x in fruit:
print(x)
fruit = ["apple","banana", "cherry"]
for x in fruit:
print(x)
fruit = ["apple","banana", "cherry"]
for x in fruit:
fruit = ["apple","banana", "cherry"]
fruit = ["apple","banana", "cherry"]
fruit = ["apple","banana", "cherry"]
for x in fruit:
print(x)
print(x)
fruit = ["apple","banana", "cherry"]
for x in fruit:
print(x)
reticulate::repl_python()
fruit = ["apple","banana", "cherry"]
for x in fruit:
print(fruit[x])
fruit = ["apple","banana", "cherry"]
for x in fruit:
print(fruit[x])
fruit = ["apple","banana", "cherry"]
for x in range(len(fruit)):
print(fruit[x])
fruit = ["apple","banana", "cherry"]
for x in range(len(fruit)):
print(fruit[x])
fruit = ["apple","banana", "cherry"]
for x in range(len(fruit)):
print(fruit[x])
fruit = ["apple","banana", "cherry"]
for x in range(len(fruit)):
print("i'm"fruit[x])
fruit = ["apple","banana", "cherry"]
for x in range(len(fruit)):
print("i'm" + fruit[x])
fruit = ["apple","banana", "cherry"]
for x in range(len(fruit)):
print("i'm" + fruit[x])
fruit = ["apple","banana", "cherry"]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x])
fruit = ["apple","banana", "cherry"]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x])
fruit = ["apple","banana", "cherry"]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x])
fruit = ["apple","banana", "cherry"]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x])
fruit = ["apple","banana", "cherry"]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x])
fruit = ["apple","banana", "cherry"]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x,y in range(len(fruit)):
print("i'm" +'  '+fruit[x], age[y])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x,y in range(len(fruit)):
print("i'm" +'  '+fruit[x] + age[y])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x,y in range(len(fruit)):
print("i'm" +'  '+fruit[x] + age[y])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x,y in range(len(fruit)):
print("i'm" +'  '+fruit[x] + age[y])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x,y in range(len(fruit)):
print("i'm" +'  '+fruit[x] + age[y])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x,y in range(len(fruit)):
print("i'm" +'  '+fruit[x] + age[y])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x,y in range(len(fruit)):
print("i'm" +'  '+fruit[x] + age[y])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x,y in range(len(fruit)):
print("i'm" +'  '+fruit[x] + age[y])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x] + x)
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x] + x)
print("i'm" +'  '+fruit[x] + age[x])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x] + age[x])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x] + age[x])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x] + age[x])
age[1]
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x] +' '+ age[x])
age[1]
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x] +' '+ age[x])
age[1]
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(len(fruit)):
print("i'm" +'  '+fruit[x] +' '+ age[x])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(3):
print("i'm" +'  '+fruit[x] +' '+ age[x])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(3):
print(fruit[x])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(3):
print(fruit[x])
print(age[x])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(3):
print(fruit[x], age[x])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(3):
print(fruit[x] + age[x])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(3):
print(fruit[x], age[x])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(3):
print("i'm",fruit[x], age[x])
fruit = ["apple","banana", "cherry"]
age = [1,2,3]
for x in range(3):
print("i'm",fruit[x],", my age",age[x])
b=[1,2,3]
a=(1,2,3)
a[1]
a[1] = 3
b[1]
b[1] = 3
b
a
a = [(1,2,3),(4,5,6),(7,8,9)]
a
a.flatten()
import numpy as np
a = [(1,2,3),(4,5,6),(7,8,9)]
a.flatten()
a.flatten
b = [[1,2,3],[4,5,6],[7,8,9]]
b.flatten()
b = [[1,2,3],[4,5,6],[7,8,9]]
b.flatten()
a = np.array[(1,2,3),(4,5,6),(7,8,9)]
a = np.array((1,2,3),(4,5,6),(7,8,9))
a = np.array(1,2,3)
a = np.array([1,2,3])
a = np.array((1,2,3))
a = np.array((1,2,3),(4,5,6),(7,8,9))
a = np.array(((1,2,3),(4,5,6),(7,8,9)))
a.flatten()
a = [(1,2,3),(4,5,6),(7,8,9)]
b = np.array(a)
a.flatten()
b.flatten()
b.flatten()[0]
b.flatten()
a.flatten()
a = [(1,2,3),(4,5,6),(7,8,9)]
b = np.array(a)
b.flatten()
quit
summary(cars)
reticulate::repl_python()
a = np.array(1:3)
a = np.array([1:3])
a = np.array([1,2,3,4,5])
a = [1,2,3,4,5]
a*2
a2 = a.apply(lambda x: x*2)
a = np.array([1,2,3,4,5])
a2 = a.apply(lambda x: x*2)
import panads as pd
a=[1,2,3,4,5]
b=[6,7,8,9,10]
import panads as pd
import pandas as pd
a=[1,2,3,4,5]
b=[6,7,8,9,10]
c = pd.DataFrame([a,b])
c
c = pd.DataFrame([a,b],axis=1)
c
c = pd.DataFrame([a,b])
c
c.a
c[a]
c["a"]
c = pd.DataFrame([a,b])
c["a"]
c["1"]
c = pd.DataFrame([a,b])
c
c*2
mpg
mpg = pd.read_csv("https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2/mpg.csv")
mpg
head(mpg)
mpg.head()
View(mpg)
mpg["hwy]
mpg["hwy"]
mpg["hwy"]*2
ops = [str.strip, str.upper]
def clean(x,ops):
result=[]
return(result)
quit
clean("  Alabama")
reticulate::repl_python()
ops = [str.strip, str.upper]
def clean(x,ops):
result=[]
return(result)
quit
clean("  Alabama")
reticulate::repl_python()
clean("  Alabama")
ops = [str.strip, str.upper]
def clean(x,ops):
ops = [str.strip, str.upper]
result=[]
return(result)
clean("  Alabama")
clean("  Alabama")
clean("  Alabama",)
clean("  Alabama",-)
x.strip()
x = "Ala  bama"
x.strip()
x.strip
x.strip()
x = " Alabama"
x.strip()
x = "  Alabama"
x.strip()
x = "  Al  abama"
x.strip()
x = "  Alabama"
x.strip()
x.strip().upper()
def clean(x):
return (x.strip().upper())
clean("  Alanbama")
clean("  Alabama")
def clean(x):
a.apply(lambda x: x.strip().upper())
a="  Alabama"
a.apply(lambda x: x.strip().upper())
a=["  Alabama"]
a.apply(lambda x: x.strip().upper())
a=np.array["  Alabama"]
a.apply(lambda x: x.strip().upper())
a=np.array("  Alabama")
a.apply(lambda x: x.strip().upper())
mpg.apply(lambda x: x["hwy"]**2)
mpg.apply(lambda x: x["hwy"]+x["displ"])
mpg["hwy"]
mpg = pd.read_csv("https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2/mpg.csv")
mpg["hwy"]
mpg['hwy-displ'] = mpg.apply(lambda x: x["hwy"]+x["displ"])
mpg['hwy-displ'] = mpg.apply(lambda x: x["hwy"]+x["displ"])
import pandas as pd
mpg = pd.read_csv("https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2/mpg.csv")
mpg["hwy"]
mpg['hwy-displ'] = mpg.apply(lambda x: x["hwy"]+x["displ"])
mpg['hwy-displ'] = mpg.apply(lambda x: x["displ"]+x["hwy"])
mpg['hwy-displ'] = mpg.apply(lambda x: x["displ"]+x["hwy"],axis=1)
quit
mpg
reticulate::repl_python()
```{python}
mpg
mpg['hwy-displ']
quit
library(tidyverse)
table1
table4b
table1
table1
table2
table3
table4a
table4b
table4a
table4b
table4a
table1
table2
table3
table4a
table4b
table2
table2 %>% pivot_wider(names_from = type, values_from = count)
table2
table2 %>% pivot_wider(names_from = type, values_from = count)
table2
table2 %>% pivot_wider(names_from = type, values_from = count)
table2
table2 %>% pivot_wider(names_from = type, values_from = count)
table2
table2 %>% pivot_wider(names_from = type, values_from = count)
table2
table2 %>% pivot_wider(names_from = type, values_from = count)
table2
table2 %>% pivot_wider(names_from = type, values_from = count)
table4a
table4b
table4a
table4b
table4a %>% left_join(table4b,by = country)
table4a %>% left_join(table4b,by = table4a$country)
table4a %>% left_join(table4b)
table2
table2 %>% pivot_wider(names_from = type, values_from = count)
#table1
table2
table4a %>% left_join(table4b,by = country)
table4a %>% left_join(table4b,by = table4a$country)
table4a
table4b
table4a %>% left_join(table4b,by = c(country,year))
table4a %>% left_join(table4b,by = c("country","year"))
table4a %>% left_join(table4b,by = c("country"))
table4a %>% left_join(table4b,by = "country")
table4a %>% left_join(table4b,by = c("country","year"))
table4a %>% inner_join(table4b,by = c("country","year"))
table4a %>% inner_join(table4b,by = "country")
data_file <- read.csv("https://raw.githubusercontent.com/Sungileo/trainsets/main/ncdc_normals.csv")
rm(list = ls())
library(ggplot2)
library(dplyr)
library(ggrepel)
library(cowplot)
library(colorspace)
library(stringr)
data_file <- read.csv("https://raw.githubusercontent.com/Sungileo/trainsets/main/ncdc_normals.csv")
data_file <- read.csv("https://raw.githubusercontent.com/Sungileo/trainsets/main/ncdc_normals.csv")
data_file <- read.csv("ncdc_normals.csv")
data_file <- read.csv("ncdc_normals.csv")
data_file <- read.csv("/ncdc_normals.csv")
data_file <- read.csv("/ncdc_normals.csv")
data_file <- read.csv("C:/sanai_sungil/posts/vis/ncdc_normals.csv")
data_file <- read.csv("ncdc_normals.csv")
data_file <- read.csv("C:/sanai_sungil/posts/vis/ncdc_normals.csv")
library(dplyr)
