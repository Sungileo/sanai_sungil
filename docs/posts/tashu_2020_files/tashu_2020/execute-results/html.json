{
  "hash": "25dabe05922f227b9820cb4562ea7f89",
  "result": {
    "markdown": "---\ntitle: \"Tashu 2020\"\nauthor: \"sungil_park\"\ndate: \"2023/06/26\"\ndate-modified: \"2023/06/26\"\ndescription: \"geocomputation example\"\ncategories: r\neditor_options: \n  chunk_output_type: inline\n---\n\n\n## 타슈 데이터 분석하기\n\n대전광역시에는 시민들의 이동 편의성을 위하여 \"타슈 공영자전거 시스템\"을 운영 중에 있습니다.\n\n주어진 데이터로 해당 문제를 풀어 보시오.\n\n\n\n\n\n\n### 데이터 로드\n\ntashu_station = 타슈 보관소 데이터\n\ntashu_2020 = 2020년 사용내역 데이터\n\ndaejeon_area = 지리데이터\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntashu_station = read.csv(\"https://raw.githubusercontent.com/Sungileo/trainsets_2/main/tasu_station.csv\") ## github을 통해 utf8로 변환\ntashu_2020 = read.csv(\"C:/Sungil_LAB/data_geom_final/data/tasu_2020.csv\",encoding = \"cp949\")\ndaejeon_area = readOGR(\"C:/Sungil_LAB/data_geom_final/data/LSMD_ADM_SECT_UMD_30.shp\",encoding = \"euc-kr\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOGR data source with driver: ESRI Shapefile \nSource: \"C:\\Sungil_LAB\\data_geom_final\\data\\LSMD_ADM_SECT_UMD_30.shp\", layer: \"LSMD_ADM_SECT_UMD_30\"\nwith 177 features\nIt has 5 fields\n```\n:::\n:::\n\n\n### 1. 데이터 구조, 변수정보 확인 & 변수명 변환\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntashu_2020 %>% str()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t604446 obs. of  5 variables:\n $ borrowStation: int  174 174 117 167 203 167 92 203 154 110 ...\n $ borrowTime   : num  2.02e+13 2.02e+13 2.02e+13 2.02e+13 2.02e+13 ...\n $ returnStaion : num  224 224 115 94 203 94 83 55 169 16 ...\n $ returnTime   : num  2.02e+13 2.02e+13 2.02e+13 2.02e+13 2.02e+13 ...\n $ distance     : num  640 640 1070 1490 0 1540 1190 750 1110 1490 ...\n```\n:::\n\n```{.r .cell-code}\ntashu_station %>% str()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t261 obs. of  4 variables:\n $ ID         : int  1 2 3 4 5 6 7 8 9 10 ...\n $ stationName: chr  \"무역전시관입구(택시승강장)\" \"대전컨벤션센터\" \"한밭수목원1\" \"초원아파트(104동 버스정류장)\" ...\n $ holder     : int  14 20 19 12 13 12 13 12 12 12 ...\n $ address    : chr  \"대전광역시 유성구 도룡동 3-8\" \"대전광역시 유성구 도룡동 4-19\" \"대전광역시 서구 만년동 396\" \"대전광역시 서구 만년동 401\" ...\n```\n:::\n\n```{.r .cell-code}\nnames(tashu_station) <- c(\"번호\", \"대여소명\", \"거치대\", \"주소\")\nnames(tashu_2020) <- c(\"대여스테이션\", \"대여일시\", \"반납스테이션\", \"반납일시\", \"이동거리\")\n```\n:::\n\n\n### 2. Google API 활용\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggmap::register_google(key = \"your API\")\n```\n:::\n\n\n#### 2-1. `geocode`를 사용하여 주소에 해당하는 위경도 추출\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntashu_station <- ggmap::mutate_geocode(data = tashu_station, location = `주소`, source = 'google')\n```\n:::\n\n\n#### 2-2. 타슈 보관소의 위치 시각화\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndj_map <- get_map(\"daejeon\",zoom=12)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ <https://maps.googleapis.com/maps/api/staticmap?center=daejeon&zoom=12&size=640x640&scale=2&maptype=terrain&language=en-EN&key=xxx>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=daejeon&key=xxx>\n```\n:::\n\n```{.r .cell-code}\nggmap(dj_map) + geom_point(data = tashu_station,\n                           aes(x=lon,y=lat),\n                           size=2,\n                           alpha=0.7)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 16 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](tashu_2020_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n### 3. 데이터 전처리\n\n\n\n\n\n#### 3-1. 대여일시 열에서 대여 년월일 추출 \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntashu_2020 <- tashu_2020 %>% mutate(대여년월일 = substr(tashu_2020$대여일시,1,8))\n```\n:::\n\n\n#### 3-2. 가장 많은 대여가 있는 9/13일 데이터 추출, 보관소 데이터 병합\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_1 <- data.frame(tashu_2020$대여년월일 %>% table()) %>% arrange(-Freq) #20200913\ntop1_day <- c(20200913)\n\ntashu_top1_day <- tashu_2020 %>% filter(대여년월일==top1_day)\ntashu_top1_day %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4048    6\n```\n:::\n\n```{.r .cell-code}\ntashu_top1_day <- tashu_top1_day %>% filter(대여스테이션 != 262 | 반납스테이션 != 262)\ntashu_top1_day %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4046    6\n```\n:::\n\n```{.r .cell-code}\nborrow_count <- tashu_top1_day %>% \n  group_by(대여스테이션) %>% \n  summarize(cnt = n()) %>% \n  na.omit()\n\nnames(borrow_count) <- c(\"번호\", \"cnt\")\nborrow_count <- borrow_count %>% full_join(tashu_station,by = \"번호\") %>% filter(번호 != 262)\nborrow_count[is.na(borrow_count)] <- 0\n\ntashu_sf <- st_as_sf(borrow_count,coords = c(\"lon\",\"lat\"))\nst_crs(tashu_sf) <- 4326\n\ntashu_sf <- tashu_sf %>% filter(대여소명 != \"읍내동우편취급국\")\n\n\ntashu_sf %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 127.3752 ymin: 36.35531 xmax: 127.3917 ymax: 36.37513\nGeodetic CRS:  WGS 84\n# A tibble: 6 × 6\n   번호   cnt 대여소명                    거치대 주소             geometry\n  <int> <int> <chr>                        <int> <chr>         <POINT [°]>\n1     1    54 무역전시관입구(택시승강장)      14 대전… (127.3894 36.37513)\n2     2    61 대전컨벤션센터                  20 대전… (127.3917 36.37502)\n3     3   285 한밭수목원1                     19 대전… (127.3878 36.36793)\n4     4    24 초원아파트(104동 버스정류…      12 대전… (127.3795 36.36799)\n5     5    55 둔산대공원 입구(버스정류장)     13 대전… (127.3846 36.35531)\n6     6    25 백합네거리(농협)                12 대전…  (127.3752 36.3617)\n```\n:::\n:::\n\n\n#### 3-3. 9/13의 정류장별 대여 수\n\n::: {.cell}\n\n```{.r .cell-code}\nggmap(dj_map) + \n  coord_sf(crs = st_crs(4326))+\n  geom_sf(data = tashu_sf,aes(size = cnt,alpha = 0.7),inherit.aes = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n:::\n\n::: {.cell-output-display}\n![](tashu_2020_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n### 4. 행정동별 대여수 시각화\n\n같은 CRS로 맟추기\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndaejeon_area %>% st_crs()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCoordinate Reference System:\n  User input: Korea 2000 / Unified CS \n  wkt:\nPROJCRS[\"Korea 2000 / Unified CS\",\n    BASEGEOGCRS[\"Korea 2000\",\n        DATUM[\"Geocentric datum of Korea\",\n            ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4737]],\n    CONVERSION[\"Korea Unified Belt\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",38,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",127.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",1000000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",2000000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (X)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (Y)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Topographic mapping (small scale).\"],\n        AREA[\"Republic of Korea (South Korea) - onshore and offshore.\"],\n        BBOX[28.6,122.71,40.27,134.28]],\n    ID[\"EPSG\",5179]]\n```\n:::\n\n```{.r .cell-code}\nto_crs = CRS(\"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\")\nd2 <- spTransform(daejeon_area, to_crs)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: PROJ support is provided by the sf and terra packages among others\n```\n:::\n\n```{.r .cell-code}\ndaejeon_area_sf <- st_as_sf(d2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndaejeon_area_sf <- st_as_sf(d2)\ndaejeon_area_sf <- daejeon_area_sf %>% st_make_valid()\n\ndaejeon_area_sf %>% plot()\n```\n\n::: {.cell-output-display}\n![](tashu_2020_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndae2 <- daejeon_area_sf[\"EMD_NM\"]\nst_crs(dae2) <- 4326\n\ngeom_joined <- dae2 %>% st_join(tashu_sf,join = st_intersects)\n\ngeom_joined[is.na(geom_joined)] <- 0\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndj_map2 <- get_map(\"daejeon\", zoom=11)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ <https://maps.googleapis.com/maps/api/staticmap?center=daejeon&zoom=11&size=640x640&scale=2&maptype=terrain&language=en-EN&key=xxx>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ <https://maps.googleapis.com/maps/api/geocode/json?address=daejeon&key=xxx>\n```\n:::\n\n```{.r .cell-code}\nggmap(dj_map2) + \n  coord_sf(crs = st_crs(4326))+\n  geom_sf(data=geom_joined,aes(fill=cnt,alpha = 0.9),inherit.aes = FALSE)+\n  scale_fill_continuous(name = \"count\",\n                        labels = c(c(0,5,10,15) %>% paste()),\n                        breaks = c(0,5,10,15),\n                        limits = c(0,20))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n:::\n\n::: {.cell-output-display}\n![](tashu_2020_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "tashu_2020_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}